---
apiVersion: v1
kind: Namespace
metadata:
  name: pg

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: minikube-pv-hack
  namespace: pg
spec:
  selector:
    matchLabels:
      name: minikube-pv-hack
  template:
    metadata:
      labels:
        name: minikube-pv-hack
    spec:
      terminationGracePeriodSeconds: 0
      containers:
        - name: minikube-pv-hack
          image: registry.access.redhat.com/ubi8:latest
          command:
            - bash
            - -c
            - |
              while : ; do
                chmod 777 /target/*
                sleep 1
              done
          volumeMounts:
            - name: host-vol
              mountPath: /target
      volumes:
        - name: host-vol
          hostPath:
            path: /tmp/hostpath-provisioner/pg

---
apiVersion: v1
kind: Secret
metadata:
  name: aws-creds
  namespace: pg
type: Opaque
data:
  ACCESS_KEY_ID: QUlQSVNUSUxSVjNBQTNZVA==
  ACCESS_SECRET_KEY: NUJIMlAwUlBZUlRNSlZZVDRaUDRTMVZUQkZEWVBJRkU=
immutable: false

---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: pg
  namespace: pg
spec:
  instances: 3
  description: "Test cluster with 3 instances without specifying image"
  imageName: ghcr.io/cloudnative-pg/postgresql:16.4
  imagePullPolicy: IfNotPresent
  #  https://cloudnative-pg.io/documentation/1.24/cloudnative-pg.v1/#postgresql-cnpg-io-v1-BootstrapInitDB
  bootstrap:
    initdb:
      localeCollate: en_US.utf8
      localeCType: en_US.utf8
  #     database: app
  #     owner: app
  #     secret:
  #       name: app-secret
  walStorage:
    storageClass: standard
    size: 128Mi
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: 200m
      memory: 512Mi
  storage:
    size: 1Gi
    storageClass: standard
    resizeInUseVolumes: true
  monitoring:
    enablePodMonitor: true
  backup:
    target: prefer-standby
    barmanObjectStore:
      endpointURL: "http://minio.s3.svc"
      destinationPath: "s3://backups"
      s3Credentials:
        accessKeyId:
          name: aws-creds
          key: ACCESS_KEY_ID
        secretAccessKey:
          name: aws-creds
          key: ACCESS_SECRET_KEY
    retentionPolicy: "10d"

---
apiVersion: postgresql.cnpg.io/v1
kind: ScheduledBackup
metadata:
  name: pg-cluster-backup
  namespace: pg
spec:
  schedule: "0 */15 * * * *"
  backupOwnerReference: self
  cluster:
    name: pg
